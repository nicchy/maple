#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
#include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif

#define LED_PIN    BCM3
#define LED_COUNT 60

Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

#include"TFT_eSPI.h"
TFT_eSPI tft;
#include "Ultrasonic.h"

#include "rpcWiFi.h"
#include"TFT_eSPI.h"
#include <PubSubClient.h>

const char* ssid = "FRITZ!Box 7530 OD"; // WiFi Name
const char* password = "82411216642512172064";  // WiFi Password
const char* mqtt_server = "broker.hivemq.com";  // MQTT Broker URL

WiFiClient wioClient;
PubSubClient client(wioClient);
long lastMsg = 0;
char msg[50];
int value = 0;

Ultrasonic ultrasonic(0);
void setup_wifi() {

  delay(10);

  tft.setTextSize(2);
  tft.setCursor((320 - tft.textWidth("Connecting to Wi-Fi..")) / 2, 120);
  tft.print("Connecting to Wi-Fi..");

  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password); // Connecting WiFi

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");

  tft.fillScreen(TFT_BLACK);
  tft.setCursor((320 - tft.textWidth("Connected!")) / 2, 120);
  tft.print("Connected!");

  Serial.println("IP address: ");
  Serial.println(WiFi.localIP()); // Display Local IP Address
}

void callback(char* topic, byte* payload, unsigned int length) {
  //tft.fillScreen(TFT_BLACK);
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  char buff_p[length];
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
    buff_p[i] = (char)payload[i];
  }
  Serial.println();
  buff_p[length] = '\0';
  String msg_p = String(buff_p);
  tft.fillScreen(TFT_BLACK);
  tft.setCursor((320 - tft.textWidth("MQTT Message")) / 2, 90);
  tft.print("MQTT Message: " );
  tft.setCursor((320 - tft.textWidth(msg_p)) / 2, 120);
  tft.print(msg_p); // Print receved payload

}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "WioTerminal-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("WTout", "hello world");
      // ... and resubscribe
      client.subscribe("/Wsafe");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(9600);
  strip.begin();           // INITIALIZE NeoPixel strip object (REQUIRED)
  strip.show();            // Turn OFF all pixels ASAP
  strip.setBrightness(50); // Set BRIGHTNESS to about 1/5 (max = 255)
  Serial.println();
  setup_wifi();
  client.setServer(mqtt_server, 1883); // Connect the MQTT Server
  client.setCallback(callback);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  
  client.loop();
  long RangeInCentimeters;
  RangeInCentimeters = ultrasonic.MeasureInCentimeters();
  delay(150);

  if (RangeInCentimeters > 44) {
    client.publish("marghemaple", "A");
    Serial.println("Poasacenere Vuoto");
    strip.fill(strip.Color(0, 255, 0));
    strip.show();

  } 
  else if ((RangeInCentimeters < 44) && ( RangeInCentimeters > 8)) {
    client.publish("marghemaple", "B");
    Serial.println("Poasacenere Semi Pieno");
    strip.setPixelColor(15, 255, 0, 0);
    strip.setPixelColor(16, 255, 0, 0);
    strip.setPixelColor(17, 255, 0, 0);
    strip.setPixelColor(18, 255, 0, 0);
    strip.setPixelColor(19, 255, 0, 0);
    strip.setPixelColor(20, 255, 0, 0);
    strip.setPixelColor(21, 255, 0, 0);
    strip.setPixelColor(22, 255, 0, 0);
    strip.setPixelColor(23, 255, 0, 0);
    strip.setPixelColor(24, 255, 0, 0);
    strip.setPixelColor(25, 255, 0, 0);
    strip.setPixelColor(26, 255, 0, 0);
    strip.setPixelColor(27, 255, 0, 0);
    strip.setPixelColor(28, 255, 0, 0);
    strip.setPixelColor(29, 255, 0, 0);
    strip.show();

  } 
  else if (RangeInCentimeters < 8) {
    client.publish("marghemaple", "C");
    Serial.println("Poasacenere Pieno");
    strip.fill(strip.Color(255, 0, 0));
    strip.show();

  }

  // Serial.println(RangeInCentimeters);

}
